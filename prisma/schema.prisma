generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String
  password  String
  role      Role     @default(CLIENT)
  imageUrl  String?
  publicId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings Booking[]
  sessions Session[]
}

model Brand {
  id        String   @id @default(uuid())
  name      String   @unique
  imageUrl  String
  publicId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vehicles Vehicle[]
}

model Vehicle {
  id            String   @id @default(uuid())
  name          String
  type          String
  price         Int
  status        Status   @default(Available)
  year          Int
  seat          Int
  horse_power   Int
  description   String   @db.LongText
  spesification String   @db.Text
  imageUrl      String
  publicId      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  brand   Brand  @relation(fields: [brandId], references: [id])
  brandId String

  bookings Booking[]
}

model Booking {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  vehicleId String

  fullName        String
  deliveryAddress String
  phoneNumber     String
  rentDate        DateTime
  returnDate      DateTime
  paymentMethod   PaymentMethod
  status          BookingStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  refreshToken String   @db.LongText
  userAgent    String?
  ipAddress    String?
  isValid      Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum PaymentMethod {
  CASH
  TRANSFER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum Role {
  ADMIN
  CLIENT
}

enum Status {
  Available
  Unavailable
  Rented
}
